apply plugin: 'java'
apply plugin: 'java-library-distribution'
apply plugin: 'maven'

sourceCompatibility = 1.6
version = '1.0'

repositories {
    mavenLocal()
    maven { url "http://thaliartifactory.cloudapp.net/artifactory/libs-snapshot" }
    maven { url "http://thaliartifactory.cloudapp.net/artifactory/libs-release" }
    maven { url 'http://files.couchbase.com/maven2/' }
    mavenCentral()
}

jar {
    baseName = 'couchbase-lite-java'
    version =  '1.0'
}

distributions {
    main{
        baseName = 'couchbase-lite-java'
    }
}

def buildJavaUsingLocalModule = System.getProperty("buildJavaUsingLocalModule")

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'

    //compile group: 'com.almworks.sqlite4java', name: 'libsqlite4java-osx', version: '0.282'

    //compile fileTree(dir: 'libs', include: 'couchbase-lite-java-native-1.0.jar')
    compile 'com.couchbase.lite:java-native:' + System.getProperty("UPLOAD_VERSION_CBLITE")
    //compile 'com.couchbase.lite:java-core:' + System.getProperty("UPLOAD_VERSION_CBLITE")
    compile 'org.apache.httpcomponents:httpcore:4.0-beta2'
    compile 'org.apache.httpcomponents:httpclient:4.0-beta1'

    compile buildJavaUsingLocalModule == null ?
            'com.couchbase.lite:java-core:' + System.getProperty("UPLOAD_VERSION_CBLITE") :
            project(':libraries:couchbase-lite-java-core')
}

def mavenPath() {
    artifactory_local == "true" ?
            'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath :
            artifactory_contextUrl + "/libs-release-local"
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: mavenPath()) {
                authentication(userName: "${artifactory_user}", password: "${artifactory_password}")
            }

            pom.version = "${System.properties['UPLOAD_VERSION_CBLITE']}"
            pom.groupId = 'com.couchbase.lite'
            pom.artifactId = 'java'
            pom.project {
                licenses {
                    license {
                        name 'Couchbase Community Edition License Agreement'
                        url 'http://www.couchbase.com/agreement/community'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.java.srcDirs
}

artifacts {
    archives sourcesJar
}